<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1

coins = Obj_Player.coins
onSpeed = false
onAmmo = false
onBulletTime = false
onBerserk = false
onSpeedBoost = false
onBack = true

alpha = 1
prevLH = 0

ini_open("SaveData.ini")
speedLev = ini_read_real("Upgrades", "Speed", 180)
ammoLev = ini_read_real("Upgrades", "Ammo", 6)
bulletTimeLev = ini_read_real("Upgrades", "BulletTime", 300)
berserkLev = ini_read_real("Upgrades", "Berserk", 300)
speedBoostLev = ini_read_real("Upgrades", "SpeedBoost", 300)
ini_close()

if (speedLev == 180) speedCost = 20
else if (speedLev == 200) speedCost = 40
else if (speedLev == 220) speedCost = 80
else if (speedLev == 240) speedCost = 160
else if (speedLev == 260) speedCost = 320
if (ammoLev == 6) ammoCost = 40
else if (ammoLev == 12) ammoCost = 80
else if (ammoLev == 18) ammoCost = 160
else if (ammoLev == 24) ammoCost = 320
else if (ammoLev == 30) ammoCost = 640

bulletTimeCost = (bulletTimeLev - 200) / 2
berserkCost = (berserkLev - 200) / 2
speedBoostCost = (speedBoostLev - 200) / 2



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_all(true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_enter) or
    keyboard_check_pressed(ord("K")) or
    gamepad_button_check_pressed(0, gp_face1) or
    gamepad_button_check_pressed(0, gp_start)) {
        select = true
    }
    else {
        select = false
    }
    
    up = (keyboard_check_pressed(ord("W")) or 
        ((gamepad_axis_value(0, gp_axislv) &lt; -.3) and prevLH &gt; -.3) or 
        gamepad_button_check_pressed(0,gp_padu))
    down = (keyboard_check_pressed(ord("S")) or 
        ((gamepad_axis_value(0, gp_axislv) &gt; .3) and prevLH &lt; .3) or 
        gamepad_button_check_pressed(0,gp_padd))
// Navigation
if(up) {
    if(onBack) {
        onBack = false
        onSpeedBoost = true
    }
    else if (onSpeedBoost) {
        onSpeedBoost = false
        onBerserk = true
    }
    else if (onBerserk) {
        onBerserk = false
        onBulletTime = true
    }
    else if (onBulletTime) {
        onBulletTime = false
        onAmmo = true
    }
    else if (onAmmo) {
        onAmmo = false
        onSpeed = true
    }
    else if (onSpeed) {
        onSpeed = false
        onBack = true
    }
}
if(down) {
    if(onSpeed) {
        onSpeed = false
        onAmmo = true
    }
    else if(onAmmo){
        onAmmo = false
        onBulletTime = true
    }
    else if (onBulletTime) {
        onBulletTime = false
        onBerserk = true
    }
    else if (onBerserk) {
        onBerserk = false
        onSpeedBoost = true
    }
    else if (onSpeedBoost) {
        onSpeedBoost = false
        onBack = true
    }
    else if (onBack) {
        onBack = false
        onSpeed = true
    }

}
// Selection        
if (onBack and select) {
    with(Obj_BerserkPowerUp) instance_destroy()
    with(Obj_BulletTimePowerUp) instance_destroy()
    with(Obj_SpeedBoostPowerUp) instance_destroy()
    instance_activate_all()
    Obj_Player.coins = coins
    ini_open("SaveData.ini")
    ini_write_real("Money", "Coins", coins)
    ini_close()
    instance_destroy()
}
else if (onSpeed and select) {
    if((speedLev &lt; 260) and (coins &gt;= speedCost)) {
        coins -= speedCost
        ini_open("SaveData.ini")
        ini_write_real("Upgrades", "Speed", speedLev + 20)
        speedLev += 20
        speedCost *= 2
        ini_close()  
    }
    else {
    }
}
else if (onAmmo and select) {
    if(ammoLev &lt; 30) and (coins &gt;= ammoCost) {
        coins -= ammoCost
        ini_open("SaveData.ini")
        ini_write_real("Upgrades", "Ammo", ammoLev + 6)
        ammoLev += 6
        ammoCost *= 2
        ini_close()
        
    }
    else{
    }
}
else if (onBulletTime and select) {
    if(bulletTimeLev &lt; 600) and (coins &gt;= bulletTimeCost) {
        coins -= bulletTimeCost
        ini_open("SaveData.ini")
        ini_write_real("Upgrades", "BulletTime", bulletTimeLev + 100)
        bulletTimeLev += 100
        bulletTimeCost = (bulletTimeLev - 200) / 2
        ini_close()
        
    }
    else{
    }
}
else if (onBerserk and select) {
    if(berserkLev &lt; 600) and (coins &gt;= berserkCost) {
        coins -= berserkCost
        ini_open("SaveData.ini")
        ini_write_real("Upgrades", "Berserk", berserkLev + 100)
        berserkLev += 100
        berserkCost = (berserkLev - 200) / 2
        ini_close()
        
    }
    else{
    }
}
else if (onSpeedBoost and select) {
    if(speedBoostLev &lt; 600) and (coins &gt;= speedBoostCost) {
        coins -= speedBoostCost
        ini_open("SaveData.ini")
        ini_write_real("Upgrades", "speedBoost", speedBoostLev + 100)
        speedBoostLev += 100
        speedBoostCost = (speedBoostLev - 200) / 2
        ini_close()
        
    }
    else{
    }
}


        
        
if (alpha == 1) {
    fadeIn = false
    fadeOut = true
}
if (alpha &lt;= .1) {
    fadeOut = false
    fadeIn = true
}
if (fadeOut) {
    alpha -= .02
}
if (fadeIn) {
    alpha += .02
}       
prevLH = gamepad_axis_value(0, gp_axislv)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0
draw_set_color(c_black)
draw_set_alpha(.5)
draw_rectangle(0,0,1024,768,false)
draw_set_alpha(1)
draw_set_color(c_white)
draw_set_font(Fnt_Heading)
draw_set_halign(fa_center)
draw_text( 256*2, 384*2 / 10, "Upgrade")

if ((speedLev &lt; 260) and (coins &gt;= speedCost)) {
    if(onSpeed) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text(256, 200, "Run Speed")
    draw_text(488, 200, "Lv:")
    draw_text(768, 200, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 200, speedLev / 180)
    draw_text(820, 200, speedCost)
}
else {
    if(onSpeed) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_maroon)
    draw_set_halign(fa_center)
    draw_text(256, 200, "Run Speed")
    draw_text(488, 200, "Lv:")
    draw_text(768, 200, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 200, speedLev / 180)
    draw_text(820, 200, speedCost)
}
if (speedLev == 260) {
    draw_set_color(c_maroon)
    draw_set_halign(fa_left)
    draw_text(2, 200, "Max")
}

if ((ammoLev &lt; 30) and (coins &gt;= ammoCost)) {
    if(onAmmo) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text(256, 300, "Ammo")
    draw_text(488, 300, "Lv:")
    draw_text(768, 300, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 300, ammoLev)
    draw_text(820, 300, ammoCost)
}
else {
    if(onAmmo) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_maroon)
    draw_set_halign(fa_center)
    draw_text(256, 300, "Ammo")
    draw_text(488, 300, "Lv:")
    draw_text(768, 300, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 300, ammoLev)
    draw_text(820, 300, ammoCost)
}
if (ammoLev == 30) {
    draw_set_color(c_maroon)
    draw_set_halign(fa_left)
    draw_text(2, 300, "Max")
}

if ((bulletTimeLev &lt; 600) and (coins &gt;= bulletTimeCost)) {
    if(onBulletTime) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text(256, 400, "Bullet Time Duration")
    draw_text(488, 400, "Sec:") 
    draw_text(768, 400, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 400, bulletTimeLev / 60)
    draw_text(820, 400, bulletTimeCost)
}
else {
    if(onBulletTime) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_maroon)
    draw_set_halign(fa_center)
    draw_text(256, 400, "Bullet Time Duration")
    draw_text(488, 400, "Sec:") 
    draw_text(768, 400, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 400, bulletTimeLev / 60)
    draw_text(820, 400, bulletTimeCost)
}
if (bulletTimeLev == 600) {
    draw_set_color(c_maroon)
    draw_set_halign(fa_left)
    draw_text(2, 400, "Max")
}

if ((berserkLev &lt; 600) and (coins &gt;= berserkCost)) {
    if(onBerserk) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text(256, 500, "Berserk Duration")
    draw_text(488, 500, "Sec:")
    draw_text(768, 500, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 500, berserkLev / 60) 
    draw_text(820, 500, berserkCost)
}
else {
    if(onBerserk) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_maroon)
    draw_set_halign(fa_center)
    draw_text(256, 500, "Berserk Duration")
    draw_text(488, 500, "Sec:")
    draw_text(768, 500, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 500, berserkLev / 60) 
    draw_text(820, 500, berserkCost)
}
if (berserkLev == 600) {
    draw_set_color(c_maroon)
    draw_set_halign(fa_left)
    draw_text(2, 500, "Max")
}

if ((speedBoostLev &lt; 600) and (coins &gt;= speedBoostCost)) {
    if(onSpeedBoost) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_white)
    draw_set_halign(fa_center)
    draw_text(256, 600, "Speed Boost Duration")
    draw_text(488, 600, "Sec:")
    draw_text(768, 600, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 600, speedBoostLev / 60) 
    draw_text(820, 600, speedBoostCost)
}
else {
    if(onSpeedBoost) {draw_set_alpha(alpha)}
    else {draw_set_alpha(.3)}
    draw_set_color(c_maroon)
    draw_set_halign(fa_center)
    draw_text(256, 600, "Speed Boost Duration")
    draw_text(488, 600, "Sec:")
    draw_text(768, 600, "Cost:")
    draw_set_halign(fa_left)
    draw_text(540, 600, speedBoostLev / 60) 
    draw_text(820, 600, speedBoostCost)
}
if (speedBoostLev == 600) {
    draw_set_color(c_maroon)
    draw_set_halign(fa_left)
    draw_text(2, 600, "Max")
}


draw_set_halign(fa_center)
draw_set_alpha(.3)
draw_set_color(c_white)
draw_text(512, 700, "Back")
if(onBack) {
    draw_set_alpha(alpha)
    draw_text(512, 700, "Back")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
