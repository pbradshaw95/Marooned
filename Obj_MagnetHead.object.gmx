<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_MagnetHeadLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xVel = 0
yVel = 0
yVelMax = 500

moveSpeed = 40
hit = false
facingRight = false
aggroRange = 150
yAggroRange = 384
aggro = false
ground = false
prevGround = false
rotate = false

damage = 5

hpMax = 20
hp = hpMax

image_speed = 0
image_index = 0
image_yscale = -1


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(random_range(0, 9) &lt; 6) {
    instance_create(x, y, Obj_Coin)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false
rotate = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (aggro) {
    yVel += global.grav * global.TIME_PASSED
}

// Horizontal Collision
if (place_meeting(x + (xVel * global.TIME_PASSED), y, Obj_Wall)) {
    while(!place_meeting(x + sign(xVel), y, Obj_Wall)) {
        x += sign(xVel);
    }
    xVel = 0
    facingRight = !facingRight
}

// Vertical Collision
if (place_meeting(x, y + (yVel * global.TIME_PASSED /* + integration */), Obj_Wall)) {
    while(!place_meeting(x, y + sign(yVel), Obj_Wall)) {
        y += sign(yVel);
    }
    yVel = 0
    ground = true
}
else {
    ground = false
}


if (abs(yVel) &gt; yVelMax) {
    yVel = yVelMax * sign(yVel)
}
if ground {
    if (facingRight) xVel = moveSpeed
    else xVel = -moveSpeed
}

if (aggro) {
    x += xVel * global.TIME_PASSED
    y += yVel * global.TIME_PASSED
    
    if (!hit) {
        image_speed = .08
        if (facingRight) sprite_index = Spr_MagnetHeadRight
        else sprite_index = Spr_MagnetHeadLeft
    }
}


if (hp &lt;= 0) {
    instance_create(x, y, Obj_EnemyBreak)
    instance_destroy()
}

if (instance_exists(Obj_Player)) {
    if (abs(x - Obj_Player.x) &lt; aggroRange) and 
    (Obj_Player.y - y &lt; yAggroRange) and 
    (Obj_Player.y - y &gt; 0) {
        aggro = true
        image_yscale = 1
    }

    if (aggro and ground and !prevGround) {
        if (x &lt; Obj_Player.x) {
            facingRight = true
           
        }
        else {
            facingRight = false
        }
    }
}
if rotate {
    image_angle += 12
    mask_index = Spr_MagnetHeadLeft   
}
prevGround = ground
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Obj_Dagger">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hit) {
    hp -= Obj_Dagger.damage
    hit = true
    alarm[0] = 31
    if (instance_exists(Obj_Player)) {
        //crouch attack
        if (Obj_Player.swordHeight == Obj_Player.y + 16) {
            yVel = -500
            rotate = true
        }
        if (Obj_Player.facingRight) {
            xVel = 200
        }
        else {
            xVel = -200
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if (aggro) {
if (hp &gt; (hpMax * 2 / 3)) {
    draw_healthbar(x - 10, y - 30, x + 10, y - 27, 100 * hp / hpMax,c_black, c_green, c_green, 0, true, false)
}
else if (hp &lt;= (hpMax * 2 / 3)) and (hp &gt; (hpMax / 3)) {
    draw_healthbar(x - 10, y - 30, x + 10, y - 27, 100 * hp / hpMax,c_black, c_yellow, c_yellow, 0, true, false)
}
else {
    draw_healthbar(x - 10, y - 30, x + 10, y - 27, 100 * hp / hpMax,c_black, c_red, c_red, 0, true, false)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
